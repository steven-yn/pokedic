import { GetServerSidePropsContext } from 'next';
import Head from 'next/head';
import React from 'react';
import usePokemonDetailData from '@/components/PokemonInfo/hooks/usePokemonDetailData';
import DetailSection from '@/components/Section/DetailSection';
import { pokemonKeys } from '@/const/queries';
import FetchPokemon from '@/services/FetchPokemon';
import commonServerSiderProps from '@/utils/commonServerSiderProps';

const PokemonDetail = () => {
  const { data } = usePokemonDetailData();

  if (!data || !data.responseData.koNames) return null;
  return (
    <>
      <Head>
        <title>
          포켓몬 도감 - {data.responseData.koNames[0].name || ''} 의 정보
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DetailSection />
    </>
  );
};

export const getServerSideProps = commonServerSiderProps([
  {
    key: [pokemonKeys.detail],
    callback: (context: GetServerSidePropsContext) => {
      const { id } = context.query;
      return FetchPokemon.pokemon({
        pathParam: Array.isArray(id) ? id.join('') : id,
      });
    },
    fetchMode: 'NORMAL',
  },
]);

export default PokemonDetail;
