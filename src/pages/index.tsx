import { dehydrate } from '@tanstack/react-query';
import { Inter } from 'next/font/google';
import Head from 'next/head';
import Pokemons from '@/components/Pokemons';
import { pokemonKeys } from '@/const/queries';
import FetchPokemon from '@/services/FetchPokemon';
import createQueryClient from '@/utils/createQueryClient';
import { pokemonPagenate } from '@/utils/pokemonPagenate';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${inter.className}`}>
        <Pokemons>
          <Pokemons.Pages />
        </Pokemons>
      </main>
    </>
  );
}

export const getServerSideProps = async () => {
  const queryClient = createQueryClient();
  await queryClient.fetchInfiniteQuery({
    queryKey: [pokemonKeys.list],
    queryFn: () =>
      FetchPokemon.pokemons({
        params: pokemonPagenate(1),
      }),
    initialPageParam: 1,
  });

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};
