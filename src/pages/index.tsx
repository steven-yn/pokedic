import { GetServerSidePropsContext } from 'next';
import Head from 'next/head';
import ResourceLink from '@/components/meta/ResourceLink';
import usePokemonListData from '@/components/PokemonDictionary/hooks/usePokemonListData';
import DictionarySection from '@/components/Section/DictionarySection';
import SearchSection from '@/components/Section/SearchSection';
import { pokemonKeys } from '@/const/queries';
import FetchPokemon from '@/services/FetchPokemon';
import commonServerSiderProps from '@/utils/commonServerSiderProps';
import { pokemonPagenate } from '@/utils/pokemonPagenate';
import stringToNumber from '@/utils/stringToNumber';

const PokemonList = () => {
  const { data } = usePokemonListData();

  if (!data) return null;

  return (
    <>
      <Head>
        <title>포켓몬 도감 - 전체보기</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ResourceLink />
      <h1>POKEDIC</h1>
      <SearchSection />
      <DictionarySection />
    </>
  );
};

export const getServerSideProps = commonServerSiderProps([
  {
    key: [pokemonKeys.list],
    callback: (context: GetServerSidePropsContext) => {
      const { query } = context;
      const { start, end } = query;
      return FetchPokemon.pokemonList({
        params: pokemonPagenate(1, stringToNumber(start), stringToNumber(end)),
      });
    },

    fetchMode: 'INFINITE',
  },
]);

export default PokemonList;
