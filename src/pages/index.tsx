import Head from 'next/head';
import usePokemonListData from '@/components/PokemonDictionary/hooks/usePokemonListData';
import PokemonDictionary from '@/components/PokemonDictionary/PokemonDictionary';
import { pokemonKeys } from '@/const/queries';
import FetchPokemon from '@/services/FetchPokemon';
import commonServerSiderProps from '@/utils/commonServerSiderProps';
import { pokemonPagenate } from '@/utils/pokemonPagenate';
import { inter } from './_app';

const PokemonList = () => {
  const { data } = usePokemonListData();

  if (!data) return null;

  return (
    <>
      <Head>
        <title>포켓몬 도감 - 전체보기</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PokemonDictionary className={inter.className}>
        {data.pages.map((result, idx) => {
          return (
            <PokemonDictionary.List
              key={result.responseData.results[idx].name}
              results={result.responseData.results}
            />
          );
        })}
      </PokemonDictionary>
    </>
  );
};

export const getServerSideProps = commonServerSiderProps([
  {
    key: [pokemonKeys.list],
    callback: () =>
      FetchPokemon.pokemonList({
        params: pokemonPagenate(1),
      }),
    fetchMode: 'INFINITE',
  },
]);

export default PokemonList;
